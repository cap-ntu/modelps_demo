{"version":3,"sources":["assets/model_upload.gif","assets/edit.gif","assets/genie.gif","assets/dashboard.gif","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Caption","order","text","className","Text","strong","undefined","Guide","onClickCitation","useCallback","e","preventDefault","navigator","clipboard","writeText","then","message","success","direction","size","Title","level","type","gutter","justify","span","href","onClick","title","hoverable","xl","src","modelUpload","modelEdit","modelGenie","modelDashboard","App","style","minHeight","lg","xxl","marginTop","opacity","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2105452e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/model_upload.fc3aaeef.gif\";","export default __webpack_public_path__ + \"static/media/edit.547ac7ee.gif\";","export default __webpack_public_path__ + \"static/media/genie.6cfa4ba9.gif\";","export default __webpack_public_path__ + \"static/media/dashboard.dce01b85.gif\";","import React, {useCallback} from 'react';\nimport {Card, Col, Image, message, Row, Space, Typography} from \"antd\";\nimport './App.css';\nimport modelUpload from './assets/model_upload.gif';\nimport modelEdit from './assets/edit.gif';\nimport modelGenie from './assets/genie.gif';\nimport modelDashboard from './assets/dashboard.gif';\n\n\nconst Caption = ({order, text}: { order?: number; text: string }) => (\n  <div className=\"text-center\">\n    {order ? <Typography.Text strong>({order}) </Typography.Text> : undefined}\n    <Typography.Text>{text}</Typography.Text>\n  </div>\n);\n\nconst Guide = () => {\n  const onClickCitation = useCallback((e) => {\n    e.preventDefault();\n    const promise = navigator.clipboard.writeText(\n      '@article{li2021modelps,\\n' +\n      '  title={ModelPS: An Interactive and Collaborative Platform for Editing Pre-trained Models at Scale},\\n' +\n      '  author={Li, Yuanming and Zhang, Huaizheng and Jiang, Shanshan and Yang, Fan and Wen, Yonggang and Luo, Yong},\\n' +\n      '  journal={arXiv preprint arXiv:2105.08275},\\n' +\n      '  year={2021}\\n' +\n      '}',\n    );\n    promise.then(() => {\n      message.success('You have copied the bibtex citation!');\n    });\n  }, []);\n\n  return (\n    <Space direction=\"vertical\" size=\"middle\">\n      <div className=\"text-center\">\n        <Typography.Title level={2}>\n          ModelPS: An Interactive and Collaborative Platform for Editing Pre-trained Models at Scale\n        </Typography.Title>\n        <Space direction=\"vertical\">\n          <Typography.Text>\n            Yuanming Li<sup>&lowast;, 1</sup>, Huaizheng Zhang<sup>&lowast;, 1</sup>, Shanshan Jiang<sup>1</sup>, Fan\n            Yang\n            <sup>1</sup>, Yonggang Wen<sup>1</sup> and Yong Luo<sup>2</sup>\n          </Typography.Text>\n          <Typography.Text type=\"secondary\">1 Nanyang Technological University, 2 Wuhan University</Typography.Text>\n        </Space>\n      </div>\n      <Row gutter={20} justify=\"center\">\n        <Col span={2} className=\"text-center\">\n          <a href={'https://github.com/cap-ntu/ML-Model-CI'}>Code</a>\n        </Col>\n        <Col span={2} className=\"text-center\">\n          <a href={'https://arxiv.org/abs/2105.08275'}>Paper</a>\n        </Col>\n        <Col span={2} className=\"text-center\">\n          <a href={'https://mlmodelci.com/document'}>Tutorial</a>\n        </Col>\n        <Col span={2} className=\"text-center\">\n          <a href={'.'} onClick={onClickCitation}>\n            Cite\n          </a>\n        </Col>\n        <Col span={2} className=\"text-center\">\n          <a href={'https://mlmodelci.com/'}>News</a>\n        </Col>\n      </Row>\n      <Card title={<Typography.Title level={3}>Abstract</Typography.Title>} hoverable>\n        AI engineering has emerged as a crucial discipline to democratize deep neural network (DNN) models among\n        software developers with a diverse background. In particular, altering these DNN models in the deployment stage\n        posits a tremendous challenge. In this research, we propose and develop a low-code solution, ModelPS (an acronym\n        for &ldquo;Model Photoshop&rdquo;), to enable and empower collaborative DNN model editing and intelligent model\n        serving. The ModelPS solution embodies two transformative features: 1) a user-friendly web interface for a\n        developer team to share and edit DNN models pictorially, in a low-code fashion, and 2) a model genie engine in\n        the backend to aid developers in customizing model editing configurations for given deployment requirements or\n        constraints. Our case studies with a wide range of deep learning (DL) models show that the system can\n        tremendously reduce both development and communication overheads with improved productivity. The code has been\n        released as an open-source package at GitHub.\n      </Card>\n      <Card title={<Typography.Title level={3}>Demonstration</Typography.Title>} hoverable>\n        <Row gutter={[16, 24]}>\n          <Col xl={12}>\n            <Image src={modelUpload}/>\n            <Caption order={1} text=\"Upload Model\"/>\n          </Col>\n          <Col xl={12}>\n            <Image src={modelEdit}/>\n            <Caption order={2} text=\"Edit Pre-trained Model\"/>\n          </Col>\n          <Col xl={12}>\n            <Image src={modelGenie}/>\n            <Caption order={3} text=\"Search Training Configuration with Model Genie\"/>\n          </Col>\n          <Col xl={12}>\n            <Image src={modelDashboard}/>\n            <Caption order={4} text=\"Model Dashboard\"/>\n          </Col>\n        </Row>\n      </Card>\n    </Space>\n  );\n};\n\nfunction App() {\n  return (\n    <>\n      <Row justify=\"center\" gutter={[0, 16]} style={{minHeight: '100vh'}}>\n        <Col lg={22} xl={20} xxl={16} style={{marginTop: 48}}>\n          <Guide/>\n        </Col>\n      </Row>\n      <div style={{opacity: 0.3, padding: '16px 0px'}}>\n        <p className=\"footer\">\n          <span className=\"logo\">CAP NTU</span>\n          <br/>\n          <span className=\"copyright\">Â© 2021 Nanyang Technological University, Singapore</span>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}